digraph "QCPLayerable"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{QCPLayerable\n|# mVisible\l# mParentPlot\l# mParentLayerable\l# mLayer\l# mAntialiased\l|+ QCPLayerable()\l+ ~QCPLayerable()\l+ visible()\l+ parentPlot()\l+ parentLayerable()\l+ layer()\l+ antialiased()\l+ setVisible()\l+ setLayer()\l+ setLayer()\l+ setAntialiased()\l+ selectTest()\l+ realVisibility()\l# parentPlotInitialized()\l# selectionCategory()\l# clipRect()\l# applyDefaultAntialiasingHint()\l# draw()\l# selectEvent()\l# deselectEvent()\l# initializeParentPlot()\l# setParentLayerable()\l# moveToLayer()\l# applyAntialiasingHint()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{QObject\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{QCPAbstractItem\n|# mClipToAxisRect\l# mClipAxisRect\l# mPositions\l# mAnchors\l# mSelectable\l# mSelected\l|+ QCPAbstractItem()\l+ ~QCPAbstractItem()\l+ clipToAxisRect()\l+ clipAxisRect()\l+ selectable()\l+ selected()\l+ setClipToAxisRect()\l+ setClipAxisRect()\l+ setSelectable()\l+ setSelected()\land 6 more...\l# selectionCategory()\l# clipRect()\l# applyDefaultAntialiasingHint()\l# draw()\l# selectEvent()\l# deselectEvent()\l# anchorPixelPoint()\l# distSqrToLine()\l# rectSelectTest()\l# createPosition()\l# createAnchor()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_abstract_item.html",tooltip="The abstract base class for all items in a plot. "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{QCPItemBracket\n|+ left\l+ right\l+ center\l# mPen\l# mSelectedPen\l# mLength\l# mStyle\l|+ QCPItemBracket()\l+ ~QCPItemBracket()\l+ pen()\l+ selectedPen()\l+ length()\l+ style()\l+ setPen()\l+ setSelectedPen()\l+ setLength()\l+ setStyle()\l+ selectTest()\l# draw()\l# anchorPixelPoint()\l# mainPen()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_item_bracket.html",tooltip="A bracket for referencing/highlighting certain parts in the plot. "];
  Node3 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{QCPItemCurve\n|+ start\l+ startDir\l+ endDir\l+ end\l# mPen\l# mSelectedPen\l# mHead\l# mTail\l|+ QCPItemCurve()\l+ ~QCPItemCurve()\l+ pen()\l+ selectedPen()\l+ head()\l+ tail()\l+ setPen()\l+ setSelectedPen()\l+ setHead()\l+ setTail()\l+ selectTest()\l# draw()\l# mainPen()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_item_curve.html",tooltip="A curved line from one point to another. "];
  Node3 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{QCPItemEllipse\n|+ topLeft\l+ bottomRight\l+ topLeftRim\l+ top\l+ topRightRim\l+ right\l+ bottomRightRim\l+ bottom\l+ bottomLeftRim\l+ left\l+ center\l# mPen\l# mSelectedPen\l# mBrush\l# mSelectedBrush\l|+ QCPItemEllipse()\l+ ~QCPItemEllipse()\l+ pen()\l+ selectedPen()\l+ brush()\l+ selectedBrush()\l+ setPen()\l+ setSelectedPen()\l+ setBrush()\l+ setSelectedBrush()\l+ selectTest()\l# draw()\l# anchorPixelPoint()\l# mainPen()\l# mainBrush()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_item_ellipse.html",tooltip="An ellipse. "];
  Node3 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{QCPItemLine\n|+ start\l+ end\l# mPen\l# mSelectedPen\l# mHead\l# mTail\l|+ QCPItemLine()\l+ ~QCPItemLine()\l+ pen()\l+ selectedPen()\l+ head()\l+ tail()\l+ setPen()\l+ setSelectedPen()\l+ setHead()\l+ setTail()\l+ selectTest()\l# draw()\l# getRectClippedLine()\l# mainPen()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_item_line.html",tooltip="A line from one point to another. "];
  Node3 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{QCPItemPixmap\n|+ topLeft\l+ bottomRight\l+ top\l+ topRight\l+ right\l+ bottom\l+ bottomLeft\l+ left\l# mPixmap\l# mScaledPixmap\l# mScaled\l# mAspectRatioMode\l# mTransformationMode\l# mPen\l# mSelectedPen\l|+ QCPItemPixmap()\l+ ~QCPItemPixmap()\l+ pixmap()\l+ scaled()\l+ aspectRatioMode()\l+ transformationMode()\l+ pen()\l+ selectedPen()\l+ setPixmap()\l+ setScaled()\l+ setPen()\l+ setSelectedPen()\l+ selectTest()\l# draw()\l# anchorPixelPoint()\l# updateScaledPixmap()\l# getFinalRect()\l# mainPen()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_item_pixmap.html",tooltip="An arbitrary pixmap. "];
  Node3 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{QCPItemRect\n|+ topLeft\l+ bottomRight\l+ top\l+ topRight\l+ right\l+ bottom\l+ bottomLeft\l+ left\l# mPen\l# mSelectedPen\l# mBrush\l# mSelectedBrush\l|+ QCPItemRect()\l+ ~QCPItemRect()\l+ pen()\l+ selectedPen()\l+ brush()\l+ selectedBrush()\l+ setPen()\l+ setSelectedPen()\l+ setBrush()\l+ setSelectedBrush()\l+ selectTest()\l# draw()\l# anchorPixelPoint()\l# mainPen()\l# mainBrush()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_item_rect.html",tooltip="A rectangle. "];
  Node3 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{QCPItemStraightLine\n|+ point1\l+ point2\l# mPen\l# mSelectedPen\l|+ QCPItemStraightLine()\l+ ~QCPItemStraightLine()\l+ pen()\l+ selectedPen()\l+ setPen()\l+ setSelectedPen()\l+ selectTest()\l# draw()\l# distToStraightLine()\l# getRectClippedStraightLine()\l# mainPen()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_item_straight_line.html",tooltip="A straight line that spans infinitely in both directions. "];
  Node3 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{QCPItemText\n|+ position\l+ topLeft\l+ top\l+ topRight\l+ right\l+ bottomRight\l+ bottom\l+ bottomLeft\l+ left\l# mColor\l# mSelectedColor\l# mPen\l# mSelectedPen\l# mBrush\l# mSelectedBrush\l# mFont\l# mSelectedFont\l# mText\l# mPositionAlignment\l# mTextAlignment\l# mRotation\l# mPadding\l|+ QCPItemText()\l+ ~QCPItemText()\l+ color()\l+ selectedColor()\l+ pen()\l+ selectedPen()\l+ brush()\l+ selectedBrush()\l+ font()\l+ selectedFont()\land 19 more...\l# draw()\l# anchorPixelPoint()\l# getTextDrawPoint()\l# mainFont()\l# mainColor()\l# mainPen()\l# mainBrush()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_item_text.html",tooltip="A text label. "];
  Node3 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{QCPItemTracer\n|+ position\l# mPen\l# mSelectedPen\l# mBrush\l# mSelectedBrush\l# mSize\l# mStyle\l# mGraph\l# mGraphKey\l# mInterpolating\l|+ QCPItemTracer()\l+ ~QCPItemTracer()\l+ pen()\l+ selectedPen()\l+ brush()\l+ selectedBrush()\l+ size()\l+ style()\l+ graph()\l+ graphKey()\land 12 more...\l# draw()\l# mainPen()\l# mainBrush()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_item_tracer.html",tooltip="Item that sticks to QCPGraph data points. "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{QCPAbstractPlottable\n|# mName\l# mAntialiasedFill\l# mAntialiasedScatters\l# mAntialiasedErrorBars\l# mPen\l# mSelectedPen\l# mBrush\l# mSelectedBrush\l# mKeyAxis\l# mValueAxis\l# mSelectable\l# mSelected\l|+ QCPAbstractPlottable()\l+ name()\l+ antialiasedFill()\l+ antialiasedScatters()\l+ antialiasedErrorBars()\l+ pen()\l+ selectedPen()\l+ brush()\l+ selectedBrush()\l+ keyAxis()\land 22 more...\l# clipRect()\l# draw()\l# selectionCategory()\l# applyDefaultAntialiasingHint()\l# selectEvent()\l# deselectEvent()\l# drawLegendIcon()\l# getKeyRange()\l# getValueRange()\l# coordsToPixels()\land 9 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_abstract_plottable.html",tooltip="The abstract base class for all data representing objects in a plot. "];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node14 [label="{QCPBars\n|# mData\l# mWidth\l# mWidthType\l# mBarsGroup\l# mBaseValue\l# mBarBelow\l# mBarAbove\l|+ QCPBars()\l+ ~QCPBars()\l+ width()\l+ widthType()\l+ barsGroup()\l+ baseValue()\l+ barBelow()\l+ barAbove()\l+ data()\l+ setWidth()\land 17 more...\l# draw()\l# drawLegendIcon()\l# getKeyRange()\l# getValueRange()\l# getVisibleDataBounds()\l# getBarPolygon()\l# getPixelWidth()\l# getStackedBaseValue()\l# connectBars()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_bars.html",tooltip="A plottable representing a bar chart in a plot. "];
  Node13 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node15 [label="{QCPColorMap\n|# mDataRange\l# mDataScaleType\l# mMapData\l# mGradient\l# mInterpolate\l# mTightBoundary\l# mColorScale\l# mMapImage\l# mUndersampledMapImage\l# mLegendIcon\l# mMapImageInvalidated\l|+ QCPColorMap()\l+ ~QCPColorMap()\l+ data()\l+ dataRange()\l+ dataScaleType()\l+ interpolate()\l+ tightBoundary()\l+ gradient()\l+ colorScale()\l+ setData()\land 10 more...\l# updateMapImage()\l# draw()\l# drawLegendIcon()\l# getKeyRange()\l# getValueRange()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_color_map.html",tooltip="A plottable representing a two-dimensional color map in a plot. "];
  Node13 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node16 [label="{QCPCurve\n|# mData\l# mScatterStyle\l# mLineStyle\l|+ QCPCurve()\l+ ~QCPCurve()\l+ data()\l+ scatterStyle()\l+ lineStyle()\l+ setData()\l+ setData()\l+ setData()\l+ setScatterStyle()\l+ setLineStyle()\land 11 more...\l# draw()\l# drawLegendIcon()\l# getKeyRange()\l# getValueRange()\l# drawScatterPlot()\l# getCurveData()\l# getRegion()\l# getOptimizedPoint()\l# getOptimizedCornerPoints()\l# mayTraverse()\l# getTraverse()\l# getTraverseCornerPoints()\l# pointDistance()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_curve.html",tooltip="A plottable representing a parametric curve in a plot. "];
  Node13 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node17 [label="{QCPFinancial\n|# mData\l# mChartStyle\l# mWidth\l# mTwoColored\l# mBrushPositive\l# mBrushNegative\l# mPenPositive\l# mPenNegative\l|+ QCPFinancial()\l+ ~QCPFinancial()\l+ data()\l+ chartStyle()\l+ width()\l+ twoColored()\l+ brushPositive()\l+ brushNegative()\l+ penPositive()\l+ penNegative()\land 19 more...\l+ timeSeriesToOhlc()\l# draw()\l# drawLegendIcon()\l# getKeyRange()\l# getValueRange()\l# drawOhlcPlot()\l# drawCandlestickPlot()\l# ohlcSelectTest()\l# candlestickSelectTest()\l# getVisibleDataBounds()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_financial.html",tooltip="A plottable representing a financial stock chart. "];
  Node13 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node18 [label="{QCPGraph\n|# mData\l# mErrorPen\l# mLineStyle\l# mScatterStyle\l# mErrorType\l# mErrorBarSize\l# mErrorBarSkipSymbol\l# mChannelFillGraph\l# mAdaptiveSampling\l|+ QCPGraph()\l+ ~QCPGraph()\l+ data()\l+ lineStyle()\l+ scatterStyle()\l+ errorType()\l+ errorPen()\l+ errorBarSize()\l+ errorBarSkipSymbol()\l+ channelFillGraph()\land 30 more...\l# draw()\l# drawLegendIcon()\l# getKeyRange()\l# getValueRange()\l# getKeyRange()\l# getValueRange()\l# drawFill()\l# drawScatterPlot()\l# drawLinePlot()\l# drawImpulsePlot()\land 21 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_graph.html",tooltip="A plottable representing a graph in a plot. "];
  Node13 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node19 [label="{QCPStatisticalBox\n|# mOutliers\l# mKey\l# mMinimum\l# mLowerQuartile\l# mMedian\l# mUpperQuartile\l# mMaximum\l# mWidth\l# mWhiskerWidth\l# mWhiskerPen\l# mWhiskerBarPen\l# mMedianPen\l# mOutlierStyle\l|+ QCPStatisticalBox()\l+ key()\l+ minimum()\l+ lowerQuartile()\l+ median()\l+ upperQuartile()\l+ maximum()\l+ outliers()\l+ width()\l+ whiskerWidth()\land 20 more...\l# draw()\l# drawLegendIcon()\l# getKeyRange()\l# getValueRange()\l# drawQuartileBox()\l# drawMedian()\l# drawWhiskers()\l# drawOutliers()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_statistical_box.html",tooltip="A plottable representing a single statistical box in a plot. "];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node20 [label="{QCPAxis\n|# mAxisType\l# mAxisRect\l# mPadding\l# mOrientation\l# mSelectableParts\l# mSelectedParts\l# mBasePen\l# mSelectedBasePen\l# mLabel\l# mLabelFont\land 40 more...\l|+ QCPAxis()\l+ ~QCPAxis()\l+ axisType()\l+ axisRect()\l+ scaleType()\l+ scaleLogBase()\l+ range()\l+ rangeReversed()\l+ autoTicks()\l+ autoTickCount()\land 111 more...\l+ marginSideToAxisType()\l+ orientation()\l+ opposite()\l# setupTickVectors()\l# generateAutoTicks()\l# calculateAutoSubTickCount()\l# calculateMargin()\l# applyDefaultAntialiasingHint()\l# draw()\l# selectionCategory()\l# selectEvent()\l# deselectEvent()\l# visibleTickBounds()\land 9 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_axis.html",tooltip="Manages a single axis inside a QCustomPlot. "];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node21 [label="{QCPGrid\n|# mSubGridVisible\l# mAntialiasedSubGrid\l# mAntialiasedZeroLine\l# mPen\l# mSubGridPen\l# mZeroLinePen\l# mParentAxis\l|+ QCPGrid()\l+ subGridVisible()\l+ antialiasedSubGrid()\l+ antialiasedZeroLine()\l+ pen()\l+ subGridPen()\l+ zeroLinePen()\l+ setSubGridVisible()\l+ setAntialiasedSubGrid()\l+ setAntialiasedZeroLine()\l+ setPen()\l+ setSubGridPen()\l+ setZeroLinePen()\l# applyDefaultAntialiasingHint()\l# draw()\l# drawGridLines()\l# drawSubGridLines()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_grid.html",tooltip="Responsible for drawing the grid of a QCPAxis. "];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node22 [label="{QCPLayoutElement\n|# mParentLayout\l# mMinimumSize\l# mMaximumSize\l# mRect\l# mOuterRect\l# mMargins\l# mMinimumMargins\l# mAutoMargins\l# mMarginGroups\l|+ QCPLayoutElement()\l+ ~QCPLayoutElement()\l+ layout()\l+ rect()\l+ outerRect()\l+ margins()\l+ minimumMargins()\l+ autoMargins()\l+ minimumSize()\l+ maximumSize()\land 16 more...\l# calculateAutoMargin()\l# mousePressEvent()\l# mouseMoveEvent()\l# mouseReleaseEvent()\l# mouseDoubleClickEvent()\l# wheelEvent()\l# applyDefaultAntialiasingHint()\l# draw()\l# parentPlotInitialized()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_layout_element.html",tooltip="The abstract base class for all objects that form the layout system. "];
  Node22 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node23 [label="{QCPAbstractLegendItem\n|# mParentLegend\l# mFont\l# mTextColor\l# mSelectedFont\l# mSelectedTextColor\l# mSelectable\l# mSelected\l|+ QCPAbstractLegendItem()\l+ parentLegend()\l+ font()\l+ textColor()\l+ selectedFont()\l+ selectedTextColor()\l+ selectable()\l+ selected()\l+ setFont()\l+ setTextColor()\l+ setSelectedFont()\l+ setSelectedTextColor()\l+ setSelectable()\l+ setSelected()\l+ selectTest()\l# selectionCategory()\l# applyDefaultAntialiasingHint()\l# clipRect()\l# draw()\l# selectEvent()\l# deselectEvent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_abstract_legend_item.html",tooltip="The abstract base class for all entries in a QCPLegend. "];
  Node23 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node24 [label="{QCPPlottableLegendItem\n|# mPlottable\l|+ QCPPlottableLegendItem()\l+ plottable()\l# draw()\l# minimumSizeHint()\l# getIconBorderPen()\l# getTextColor()\l# getFont()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_plottable_legend_item.html",tooltip="A legend item representing a plottable with an icon and the plottable name. "];
  Node22 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node25 [label="{QCPAxisRect\n|# mBackgroundBrush\l# mBackgroundPixmap\l# mScaledBackgroundPixmap\l# mBackgroundScaled\l# mBackgroundScaledMode\l# mInsetLayout\l# mRangeDrag\l# mRangeZoom\l# mRangeDragHorzAxis\l# mRangeDragVertAxis\land 11 more...\l|+ QCPAxisRect()\l+ ~QCPAxisRect()\l+ background()\l+ backgroundScaled()\l+ backgroundScaledMode()\l+ rangeDrag()\l+ rangeZoom()\l+ rangeDragAxis()\l+ rangeZoomAxis()\l+ rangeZoomFactor()\land 37 more...\l# applyDefaultAntialiasingHint()\l# draw()\l# calculateAutoMargin()\l# mousePressEvent()\l# mouseMoveEvent()\l# mouseReleaseEvent()\l# wheelEvent()\l# drawBackground()\l# updateAxesOffset()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_axis_rect.html",tooltip="Holds multiple axes and arranges them in a rectangular shape. "];
  Node25 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node26 [label="{QCPColorScaleAxisRectPrivate\n|# mParentColorScale\l# mGradientImage\l# mGradientImageInvalidated\l|+ QCPColorScaleAxisRectPrivate()\l# draw()\l# updateGradientImage()\l# axisSelectionChanged()\l# axisSelectableChanged()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_color_scale_axis_rect_private.html"];
  Node22 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node27 [label="{QCPColorScale\n|# mType\l# mDataRange\l# mDataScaleType\l# mGradient\l# mBarWidth\l# mAxisRect\l# mColorAxis\l|+ QCPColorScale()\l+ ~QCPColorScale()\l+ axis()\l+ type()\l+ dataRange()\l+ dataScaleType()\l+ gradient()\l+ label()\l+ barWidth()\l+ rangeDrag()\land 12 more...\l# applyDefaultAntialiasingHint()\l# mousePressEvent()\l# mouseMoveEvent()\l# mouseReleaseEvent()\l# wheelEvent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_color_scale.html",tooltip="A color scale for use with color coding data such as QCPColorMap. "];
  Node22 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node28 [label="{QCPLayout\n||+ QCPLayout()\l+ update()\l+ elements()\l+ elementCount()\l+ elementAt()\l+ takeAt()\l+ take()\l+ simplify()\l+ removeAt()\l+ remove()\l+ clear()\l# updateLayout()\l# sizeConstraintsChanged()\l# adoptElement()\l# releaseElement()\l# getSectionSizes()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_layout.html",tooltip="The abstract base class for layouts. "];
  Node28 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node29 [label="{QCPLayoutGrid\n|# mElements\l# mColumnStretchFactors\l# mRowStretchFactors\l# mColumnSpacing\l# mRowSpacing\l|+ QCPLayoutGrid()\l+ ~QCPLayoutGrid()\l+ rowCount()\l+ columnCount()\l+ columnStretchFactors()\l+ rowStretchFactors()\l+ columnSpacing()\l+ rowSpacing()\l+ setColumnStretchFactor()\l+ setColumnStretchFactors()\land 19 more...\l# getMinimumRowColSizes()\l# getMaximumRowColSizes()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_layout_grid.html",tooltip="A layout that arranges child elements in a grid. "];
  Node29 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node30 [label="{QCPLegend\n|# mBorderPen\l# mIconBorderPen\l# mBrush\l# mFont\l# mTextColor\l# mIconSize\l# mIconTextPadding\l# mSelectedParts\l# mSelectableParts\l# mSelectedBorderPen\l# mSelectedIconBorderPen\l# mSelectedBrush\l# mSelectedFont\l# mSelectedTextColor\l|+ QCPLegend()\l+ ~QCPLegend()\l+ borderPen()\l+ brush()\l+ font()\l+ textColor()\l+ iconSize()\l+ iconTextPadding()\l+ iconBorderPen()\l+ selectableParts()\land 32 more...\l# parentPlotInitialized()\l# selectionCategory()\l# applyDefaultAntialiasingHint()\l# draw()\l# selectEvent()\l# deselectEvent()\l# getBorderPen()\l# getBrush()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_legend.html",tooltip="Manages a legend inside a QCustomPlot. "];
  Node28 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node31 [label="{QCPLayoutInset\n|# mElements\l# mInsetPlacement\l# mInsetAlignment\l# mInsetRect\l|+ QCPLayoutInset()\l+ ~QCPLayoutInset()\l+ insetPlacement()\l+ insetAlignment()\l+ insetRect()\l+ setInsetPlacement()\l+ setInsetAlignment()\l+ setInsetRect()\l+ updateLayout()\l+ elementCount()\land 7 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_layout_inset.html",tooltip="A layout that places child elements aligned to the border or arbitrarily positioned. "];
  Node22 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node32 [label="{QCPPlotTitle\n|# mText\l# mFont\l# mTextColor\l# mSelectedFont\l# mSelectedTextColor\l# mTextBoundingRect\l# mSelectable\l# mSelected\l|+ QCPPlotTitle()\l+ QCPPlotTitle()\l+ text()\l+ font()\l+ textColor()\l+ selectedFont()\l+ selectedTextColor()\l+ selectable()\l+ selected()\l+ setText()\land 7 more...\l# applyDefaultAntialiasingHint()\l# draw()\l# minimumSizeHint()\l# maximumSizeHint()\l# selectEvent()\l# deselectEvent()\l# mainFont()\l# mainTextColor()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_q_c_p_plot_title.html",tooltip="A layout element displaying a plot title text. "];
}
