digraph "Bial::Shape"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Bial::Shape\n|+ ObjectToWorld\l+ WorldToObject\l+ ReverseOrientation\l+ TransformSwapsHandedness\l+ shapeId\l+ nextShapeId\l|+ Shape()\l+ ObjectBound()\l+ WorldBound()\l+ CanIntersect()\l+ Refine()\l+ Intersect()\l+ IntersectP()\l+ GetShadingGeometry()\l+ Area()\l+ Print()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Bial::Triangle\n|+ mesh\l+ v\l|+ Triangle()\l+ ObjectBound()\l+ WorldBound()\l+ Intersect()\l+ GetUVs()\l+ Area()\l+ GetShadingGeometry()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_bial_1_1_triangle.html",tooltip="Simple triangle Shape, used in TriangleMesh. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Bial::TriangleMesh\n|# ntris\l# nverts\l# vertexIndex\l# p\l# n\l# s\l# uvs\l|+ TriangleMesh()\l+ ~TriangleMesh()\l+ ObjectBound()\l+ WorldBound()\l+ CanIntersect()\l+ Refine()\l+ Print()\l+ ExportSTLA()\l+ ExportSTLB()\l+ getNtris()\land 6 more...\l+ ReadSTLB()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_bial_1_1_triangle_mesh.html"];
}
